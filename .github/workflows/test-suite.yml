name: 🧪 Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-framework:
    runs-on: ubuntu-latest
    continue-on-error: true  # Don't fail the entire workflow if tests fail
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        ruby-version: ['3.0', '3.1']
      fail-fast: false  # Continue testing other matrix combinations even if one fails
    
    steps:
    - name: 📋 Checkout code
      uses: actions/checkout@v4
      
    - name: 💎 Set up Ruby ${{ matrix.ruby-version }}
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true
        working-directory: ./noesis-docs
        
    - name: 📦 Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './package-lock.json'
        
    - name: 🔧 Install Jekyll dependencies
      run: |
        cd noesis-docs
        bundle install
        
    - name: 🔧 Install testing dependencies
      run: |
        npm ci
        
    - name: 🏗️ Build Jekyll site
      run: |
        cd noesis-docs
        bundle exec jekyll build
        
    - name: 🧪 Run unit tests
      continue-on-error: true
      run: |
        npm run test:unit
        
    - name: 🚀 Start Jekyll server (background)
      run: |
        cd noesis-docs
        bundle exec jekyll serve --detach --port 4000
        
    - name: ⏳ Wait for server to be ready
      run: |
        timeout 30 bash -c 'until curl -f http://localhost:4000; do sleep 1; done'
        
    - name: 🧪 Run E2E tests
      continue-on-error: true
      run: |
        npm run test:ci
        
    - name: 📊 Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.node-version }}-${{ matrix.ruby-version }}
        path: |
          testing/cypress/screenshots/
          testing/cypress/videos/
          testing/cypress/reports/
          testing/coverage/
        retention-days: 30
        
  accessibility-check:
    runs-on: ubuntu-latest
    continue-on-error: true  # Don't fail the workflow if accessibility tests fail
    # Remove the needs dependency so this runs in parallel, not blocking deployment
    # needs: test-framework
    
    steps:
    - name: 📋 Checkout code
      uses: actions/checkout@v4
      
    - name: 💎 Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
        bundler-cache: true
        working-directory: ./noesis-docs
        
    - name: 📦 Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: './package-lock.json'
        
    - name: 🔧 Install dependencies
      run: |
        cd noesis-docs && bundle install
        npm ci
        
    - name: 🚀 Start Jekyll server
      run: |
        cd noesis-docs
        bundle exec jekyll serve --detach --port 4000
        
    - name: ⏳ Wait for server
      run: |
        timeout 30 bash -c 'until curl -f http://localhost:4000; do sleep 1; done'
        
    - name: ♿ Run accessibility tests
      continue-on-error: true
      run: |
        cd testing
        npx cypress run --spec "cypress/e2e/**/*.feature" --env grepTags="@accessibility"
